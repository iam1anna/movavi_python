# while True:
#     try:
#         x = int(input("–Ø—Ä—É—Å–æ–≤: "))
#         if x < 1:
#             raise Exception("üêè –î–∞ —Ç—ã –±–∞—Ä–∞–Ω, –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ö–æ—á—É.")
#     except ValueError:
#         print("–ù—É –±–ª–∏–Ω.")
#         continue
#     except Exception as error_message:
#         print("–ù–∏–∑—è.", error_message)
#         continue
#     else:  # –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç
#         break  # –≤—ã—Ö–æ–¥ –∏–∑ while True
#
# while True:
#     char = input("–°–∏–º–≤–æ–ª: ").strip()
#     if len(char) != 1:
#         print("–•–æ—á—É –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª. –ò –∫–∏–ª—å–∫—É.")
#     else:  # –µ—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ
#         break  # –≤—ã—Ö–æ–¥ –∏–∑ while True
#
# for super_anton in range(1, x + 1):
#     # –ª–µ–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞
#     print(" " * (x - super_anton), end="")
#     print(char * super_anton, end="||")
#
# # –ø—Ä–∞–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞
#     print(char * super_anton)


# x = int(input("–ß–∏—Å–ª–æ"))
# for anton in range(1, 11):
#     print(x, "x", anton, "=", x * anton)

# shirina = int(input("–®–∏—Ä–∏–Ω–∞"))
# visota = int(input("–í—ã—Å–æ—Ç–∞"))
#
# for _ in range(0, visota):
#     print("# " * shirina) #–ø–æ—Å–ª–µ —Ä–µ—à–µ—Ç–∫–∏ –ø—Ä–æ–±–µ–ª



# import random
# import viselica
# intro = """
#    ‚ñì‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ   ‚ñê‚ñà    ‚ñà‚ñà   ‚ñÑ‚ñì‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ   ‚ñà‚ñí‚ñÄ‚ñÄ‚ñÄ‚ñí      ‚ñì‚ñÄ‚ñì      ‚ñê‚ñà    ‚ñà‚ñà                  ‚ñì‚ñÄ‚ñì
#    ‚ñí‚ñå‚ñÑ‚ñÑ‚ñÑ‚ñÄ   ‚ñê‚ñà  ‚ñÑ‚ñà‚ñÄ‚ñà  ‚ñì‚ñå         ‚ñà‚ñå         ‚ñì‚ñå ‚ñê‚ñì     ‚ñê‚ñà  ‚ñÑ‚ñà‚ñÄ‚ñà                 ‚ñì‚ñå ‚ñê‚ñì
#    ‚ñí‚ñå  ‚ñÄ‚ñà‚ñÑ  ‚ñê‚ñà‚ïî‚ñì‚ñÄ ‚ñê‚ñà  ‚ñà          ‚ñà‚ñå‚ñà‚ñå‚ñà‚ñå    ‚ñì‚ñå   ‚ñê‚ñì    ‚ñê‚ñà‚ïî‚ñì‚ñÄ ‚ñê‚ñà                ‚ñì‚ñå‚ñÑ‚ñÑ‚ñÑ‚ñê‚ñì
#    ‚ñí‚ñå  ‚ñÑ‚ñà‚ñÄ  ‚ñê‚ñà‚ñà   ‚ñê‚ñà  ‚ñÄ‚ñì‚ñÑ    ‚ñÑ   ‚ñà‚ñå       ‚ñì‚ñå     ‚ñê‚ñì   ‚ñê‚ñà‚ñà   ‚ñê‚ñà               ‚ñì‚ñå     ‚ñê‚ñì
#    ‚ñÄ‚ñÄ‚ñÄ‚ñÄ     ‚ñÄ‚ñÄ     ‚ñÄ     ‚ñÄ‚ñÄ‚ñÄ‚ñÄ    ‚ñì‚ñí‚ñÑ‚ñÑ‚ñÑ‚ñí  ‚ñê‚ñà       ‚ñà‚ñå  ‚ñÄ‚ñÄ     ‚ñÄ  ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ  ‚ñê‚ñà       ‚ñà‚ñå
# """
# print(intro)
# vocabulary = ['Anton', 'Alex', 'Alexandr', 'Arsalan', 'Danil', 'Kirill', 'Sergey', 'Nikolay', 'Nasty', 'Natasha', 'Ivan', 'Igor', 'Gosha', 'Galina', 'Olya', 'Oksana', 'Oleg', 'James', 'Bill']
#
#
# word_answer = random.choice(vocabulary).lower()
# word_display = []
#
# for _ in range(len(word_answer)):
#     word_display.append("_")
# print(word_display)
# life = 6
# counter = 0 # —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã—Ö –±—É–∫–≤
# while life > 0 and counter != len(word_answer):
#     letter = input("–ë—É–∫–≤–∞: ")
#     letter_is_be = False #–Ω–∞–ª–∏—á–∏–µ –±—É–∫–≤ –≤ —Å–ª–æ–≤–µ
#     for i in range(len(word_answer)): #–ø—Ä–æ–±–µ–≥–∞–µ–º—Å—è –ø–æ —Å–ª–æ–≤—É
#         if letter == word_answer[i]:
#             if word_display[i] != "_":
#                 letter_is_be = True
#
#             else:
#                 word_display[i] = letter #–ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–∞–µ–º –±—É–∫–≤—É
#                 letter_is_be = True
#                 counter += 1 #counter = counter + 1
#     if letter_is_be == False: #–µ—Å–ª–∏ –Ω–µ—Ç –Ω—É–∂–Ω–æ–π –±—É–∫–≤—ã
#         life -= 1
#     print(word_display)
#
# if counter == len(word_answer):
#     print("–≠—Ç–æ –ø–æ–±–µ–¥–∞! –ú–æ–π –¥—Ä—É–≥ –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –±—ã –∏ —Å–∫–∞–∑–∞–ª...")
# else:
#     print(viselica.stages[life])
#     print("–ù–∞ —ç—Ç–æ—Ç —Å–ª—É—á–∞–π –º–æ–π –¥—Ä—É–≥ –Ω–µ –ø—Ä–∏–ø–∞—Å —Ñ—Ä–∞–∞–∑—ã, –Ω–æ, –¥—É–º–∞—é, —Ç—ã –∏ —Å–∞–º –∑–Ω–∞–µ—à—å")




alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
should_end = False

while not should_end:
    text = input("–í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    text = list(text)
    shift = int(input("–°–¥–≤–∏–≥: "))
    if shift > len(alphabet):
        shift = shift % len(alphabet)
    elif shift < -len(alphabet):
        shift = shift % -len(alphabet)



    #–º–µ—Ö–∞–Ω–∏–∑–º —Å–¥–≤–∏–≥–∞
    cifer_text = ""
    for letter in text:
        if letter == " ":
            cifer_text += letter #–Ω—É —Ç–∏–ø –ø—Ä–æ–±–µ–ª –Ω–µ –Ω—É–∂–µ–Ω
        else:
            position = alphabet.index(letter) #–ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–Ω–¥–µ–∫—Å letter
            if position + shift > len(alphabet): #–≤—ã—à–µ–ª –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –≤–≤–µ—Ä—Ö
                new_position = position + shift - len(alphabet)
            elif position + shift < -len(alphabet): #–≤—ã—à–ª–∏ –∑–∞ –Ω–∏–∑ –∞–ª—Ñ–∞–≤–∏—Ç–∞
                new_position = position + shift + len(alphabet) #–≤—ã—à–µ–ª –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –≤–Ω–∏–∑
            else:
                new_position = position + shift
            cifer_text += alphabet[new_position]

    print(cifer_text)
restart = input("–ï—â–µ —Ä–∞–∑? y - –¥–∞, n - –Ω–µ—Ç")
if restart == "n":
